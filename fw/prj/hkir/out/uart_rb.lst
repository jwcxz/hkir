GAS LISTING /tmp/cc9tL58I.s 			page 1


   1               		.file	"uart_rb.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/j/projects/hkir/fw/prj/hkir/",100,0,2,.Ltext0
   8               		.stabs	"../../lib/uart_rb.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
GAS LISTING /tmp/cc9tL58I.s 			page 2


  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"./config.h",130,0,0,0
  60               		.stabs	"../../inc/config_top.h",130,0,0,0
  61               		.stabs	"/usr/avr/include/inttypes.h",130,0,0,0
  62               		.stabs	"/usr/lib/gcc/avr/4.8.2/include/stdint.h",130,0,0,0
  63               		.stabs	"/usr/avr/include/stdint.h",130,0,0,0
  64               		.stabs	"int8_t:t(5,1)=(0,10)",128,0,121,0
  65               		.stabs	"uint8_t:t(5,2)=(0,11)",128,0,122,0
  66               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,123,0
  67               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,124,0
  68               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,125,0
  69               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,126,0
  70               		.stabs	"int64_t:t(5,7)=(0,6)",128,0,128,0
  71               		.stabs	"uint64_t:t(5,8)=(0,7)",128,0,129,0
  72               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,142,0
  73               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,147,0
  74               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,159,0
  75               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,164,0
  76               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,169,0
  77               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,174,0
  78               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,179,0
  79               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,184,0
  80               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,192,0
  81               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,199,0
  82               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,213,0
  83               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,218,0
  84               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,223,0
  85               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,228,0
  86               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,233,0
  87               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,238,0
  88               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,246,0
  89               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,253,0
  90               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,273,0
  91               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,278,0
  92               		.stabn	162,0,0,0
  93               		.stabn	162,0,0,0
  94               		.stabs	"int_farptr_t:t(3,1)=(5,5)",128,0,77,0
  95               		.stabs	"uint_farptr_t:t(3,2)=(5,6)",128,0,81,0
  96               		.stabn	162,0,0,0
  97               		.stabs	"/usr/avr/include/avr/io.h",130,0,0,0
  98               		.stabs	"/usr/avr/include/avr/fuse.h",130,0,0,0
  99               		.stabs	"__fuse_t:t(7,1)=(7,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
 100               		.stabn	162,0,0,0
 101               		.stabn	162,0,0,0
 102               		.stabs	"/usr/avr/include/avr/pgmspace.h",130,0,0,0
 103               		.stabs	"/usr/lib/gcc/avr/4.8.2/include/stddef.h",130,0,0,0
 104               		.stabs	"size_t:t(9,1)=(0,4)",128,0,212,0
 105               		.stabn	162,0,0,0
 106               		.stabn	162,0,0,0
 107               		.stabn	162,0,0,0
 108               		.stabn	162,0,0,0
 109               		.stabs	"uart_rb_rxh:F(0,47)",36,0,79,uart_rb_rxh
 110               		.stabs	"data:P(5,2)",64,0,79,24
 111               	.global	uart_rb_rxh
 112               		.type	uart_rb_rxh, @function
 113               	uart_rb_rxh:
 114               		.stabd	46,0,0
GAS LISTING /tmp/cc9tL58I.s 			page 3


   1:../../lib/uart_rb.c **** /*
   2:../../lib/uart_rb.c ****  * uart ring buffer layer
   3:../../lib/uart_rb.c ****  * jwc :: jwcxz.com
   4:../../lib/uart_rb.c ****  */
   5:../../lib/uart_rb.c **** 
   6:../../lib/uart_rb.c **** #include "config.h"
   7:../../lib/uart_rb.c **** #include "uart.h"
   8:../../lib/uart_rb.c **** #include "uart_rb.h"
   9:../../lib/uart_rb.c **** 
  10:../../lib/uart_rb.c **** volatile uint8_t uart_rxbuf[UART_RX_BUFSZ];
  11:../../lib/uart_rb.c **** volatile uint8_t uart_txbuf[UART_TX_BUFSZ];
  12:../../lib/uart_rb.c **** 
  13:../../lib/uart_rb.c **** volatile uint8_t *uart_rxbuf_iptr = uart_rxbuf;
  14:../../lib/uart_rb.c **** volatile uint8_t *uart_rxbuf_optr = uart_rxbuf;
  15:../../lib/uart_rb.c **** volatile uint8_t uart_rxbuf_count = 0;
  16:../../lib/uart_rb.c **** 
  17:../../lib/uart_rb.c **** volatile uint8_t *uart_txbuf_iptr = uart_txbuf;
  18:../../lib/uart_rb.c **** volatile uint8_t *uart_txbuf_optr = uart_txbuf;
  19:../../lib/uart_rb.c **** volatile uint8_t uart_txbuf_count = 0;
  20:../../lib/uart_rb.c **** 
  21:../../lib/uart_rb.c **** 
  22:../../lib/uart_rb.c **** void uart_rb_init(void) {
  23:../../lib/uart_rb.c ****     uart_init(&uart_rb_txh, &uart_rb_rxh);
  24:../../lib/uart_rb.c ****     uart_enable();
  25:../../lib/uart_rb.c **** 
  26:../../lib/uart_rb.c **** 	uart_rxbuf_iptr = uart_rxbuf;
  27:../../lib/uart_rb.c **** 	uart_rxbuf_optr = uart_rxbuf;
  28:../../lib/uart_rb.c ****     uart_rxbuf_count = 0;
  29:../../lib/uart_rb.c **** 
  30:../../lib/uart_rb.c **** 	uart_txbuf_iptr = uart_txbuf;
  31:../../lib/uart_rb.c **** 	uart_txbuf_optr = uart_txbuf;
  32:../../lib/uart_rb.c ****     uart_txbuf_count = 0;
  33:../../lib/uart_rb.c **** }
  34:../../lib/uart_rb.c **** 
  35:../../lib/uart_rb.c **** uint8_t uart_rb_data_rdy(void) {
  36:../../lib/uart_rb.c **** 	return ( uart_rxbuf_count );
  37:../../lib/uart_rb.c **** }
  38:../../lib/uart_rb.c **** 
  39:../../lib/uart_rb.c **** uint8_t uart_rb_rx(void) {
  40:../../lib/uart_rb.c **** 	unsigned char tmp;
  41:../../lib/uart_rb.c **** 
  42:../../lib/uart_rb.c ****     // blocking call -- wait until we receive data
  43:../../lib/uart_rb.c **** 	while ( uart_rxbuf_count == 0 );
  44:../../lib/uart_rb.c **** 
  45:../../lib/uart_rb.c ****     UCSR0B &= ~(_BV(RXCIE0) | _BV(RXEN0));
  46:../../lib/uart_rb.c **** 
  47:../../lib/uart_rb.c **** 	tmp = *uart_rxbuf_optr;
  48:../../lib/uart_rb.c **** 	uart_rxbuf_count--;
  49:../../lib/uart_rb.c **** 
  50:../../lib/uart_rb.c ****     // increment pointer
  51:../../lib/uart_rb.c **** 	uart_rxbuf_optr++;
  52:../../lib/uart_rb.c **** 	if ( uart_rxbuf_optr >= uart_rxbuf + UART_RX_BUFSZ )
  53:../../lib/uart_rb.c **** 		uart_rxbuf_optr = uart_rxbuf;
  54:../../lib/uart_rb.c **** 
  55:../../lib/uart_rb.c ****     UCSR0B |= (_BV(RXCIE0) | _BV(RXEN0));
  56:../../lib/uart_rb.c ****     
  57:../../lib/uart_rb.c **** 	return tmp;
GAS LISTING /tmp/cc9tL58I.s 			page 4


  58:../../lib/uart_rb.c **** }
  59:../../lib/uart_rb.c **** 
  60:../../lib/uart_rb.c **** void uart_rb_tx(uint8_t data) {
  61:../../lib/uart_rb.c ****     UCSR0B &= ~(_BV(UDRIE0));
  62:../../lib/uart_rb.c ****     
  63:../../lib/uart_rb.c ****     // blocking call -- wait until transmit buffer is no longer full
  64:../../lib/uart_rb.c **** 	while ( uart_txbuf_count == UART_TX_BUFSZ );
  65:../../lib/uart_rb.c **** 
  66:../../lib/uart_rb.c **** 	*uart_txbuf_iptr = data;
  67:../../lib/uart_rb.c **** 	uart_txbuf_count++;
  68:../../lib/uart_rb.c **** 
  69:../../lib/uart_rb.c ****     // increment pointer
  70:../../lib/uart_rb.c **** 	uart_txbuf_iptr++;
  71:../../lib/uart_rb.c **** 	if ( uart_txbuf_iptr >= uart_txbuf + UART_TX_BUFSZ )
  72:../../lib/uart_rb.c **** 		uart_txbuf_iptr = uart_txbuf;
  73:../../lib/uart_rb.c **** 
  74:../../lib/uart_rb.c ****     // enable interrupts
  75:../../lib/uart_rb.c ****     UCSR0B |= _BV(UDRIE0);
  76:../../lib/uart_rb.c **** }
  77:../../lib/uart_rb.c **** 
  78:../../lib/uart_rb.c **** 
  79:../../lib/uart_rb.c **** void uart_rb_rxh(uint8_t data) {
 115               		.stabn	68,0,79,.LM0-.LFBB1
 116               	.LM0:
 117               	.LFBB1:
 118               	/* prologue: function */
 119               	/* frame size = 0 */
 120               	/* stack size = 0 */
 121               	.L__stack_usage = 0
  80:../../lib/uart_rb.c ****     if ( uart_rxbuf_count <= UART_RX_BUFSZ ) {
 122               		.stabn	68,0,80,.LM1-.LFBB1
 123               	.LM1:
 124 0000 9091 0000 		lds r25,uart_rxbuf_count
 125 0004 9134      		cpi r25,lo8(65)
 126 0006 00F4      		brsh .L1
 127               	.LBB4:
 128               	.LBB5:
  81:../../lib/uart_rb.c ****         *uart_rxbuf_iptr = data;
 129               		.stabn	68,0,81,.LM2-.LFBB1
 130               	.LM2:
 131 0008 E091 0000 		lds r30,uart_rxbuf_iptr
 132 000c F091 0000 		lds r31,uart_rxbuf_iptr+1
 133 0010 8083      		st Z,r24
  82:../../lib/uart_rb.c ****         uart_rxbuf_count++;
 134               		.stabn	68,0,82,.LM3-.LFBB1
 135               	.LM3:
 136 0012 8091 0000 		lds r24,uart_rxbuf_count
 137 0016 8F5F      		subi r24,lo8(-(1))
 138 0018 8093 0000 		sts uart_rxbuf_count,r24
  83:../../lib/uart_rb.c **** 
  84:../../lib/uart_rb.c ****         uart_rxbuf_iptr++;
 139               		.stabn	68,0,84,.LM4-.LFBB1
 140               	.LM4:
 141 001c 8091 0000 		lds r24,uart_rxbuf_iptr
 142 0020 9091 0000 		lds r25,uart_rxbuf_iptr+1
 143 0024 0196      		adiw r24,1
 144 0026 9093 0000 		sts uart_rxbuf_iptr+1,r25
GAS LISTING /tmp/cc9tL58I.s 			page 5


 145 002a 8093 0000 		sts uart_rxbuf_iptr,r24
  85:../../lib/uart_rb.c ****         if ( uart_rxbuf_iptr >= uart_rxbuf + UART_RX_BUFSZ )
 146               		.stabn	68,0,85,.LM5-.LFBB1
 147               	.LM5:
 148 002e 8050      		subi r24,lo8(uart_rxbuf+64)
 149 0030 9040      		sbci r25,hi8(uart_rxbuf+64)
 150 0032 00F0      		brlo .L1
  86:../../lib/uart_rb.c ****             uart_rxbuf_iptr = uart_rxbuf;
 151               		.stabn	68,0,86,.LM6-.LFBB1
 152               	.LM6:
 153 0034 80E0      		ldi r24,lo8(uart_rxbuf)
 154 0036 90E0      		ldi r25,hi8(uart_rxbuf)
 155 0038 9093 0000 		sts uart_rxbuf_iptr+1,r25
 156 003c 8093 0000 		sts uart_rxbuf_iptr,r24
 157               	.L1:
 158 0040 0895      		ret
 159               	.LBE5:
 160               	.LBE4:
 161               		.size	uart_rb_rxh, .-uart_rb_rxh
 162               	.Lscope1:
 163               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 164               		.stabd	78,0,0
 165               		.stabs	"uart_rb_txh:F(0,47)",36,0,90,uart_rb_txh
 166               	.global	uart_rb_txh
 167               		.type	uart_rb_txh, @function
 168               	uart_rb_txh:
 169               		.stabd	46,0,0
  87:../../lib/uart_rb.c ****     }
  88:../../lib/uart_rb.c **** }
  89:../../lib/uart_rb.c **** 
  90:../../lib/uart_rb.c **** void uart_rb_txh(void) {
 170               		.stabn	68,0,90,.LM7-.LFBB2
 171               	.LM7:
 172               	.LFBB2:
 173               	/* prologue: function */
 174               	/* frame size = 0 */
 175               	/* stack size = 0 */
 176               	.L__stack_usage = 0
  91:../../lib/uart_rb.c ****     uint8_t data;
  92:../../lib/uart_rb.c **** 
  93:../../lib/uart_rb.c ****     data = *uart_txbuf_optr;
 177               		.stabn	68,0,93,.LM8-.LFBB2
 178               	.LM8:
 179 0042 E091 0000 		lds r30,uart_txbuf_optr
 180 0046 F091 0000 		lds r31,uart_txbuf_optr+1
 181 004a 2191      		ld r18,Z+
  94:../../lib/uart_rb.c ****     uart_txbuf_count--;
 182               		.stabn	68,0,94,.LM9-.LFBB2
 183               	.LM9:
 184 004c 8091 0000 		lds r24,uart_txbuf_count
 185 0050 8150      		subi r24,lo8(-(-1))
 186 0052 8093 0000 		sts uart_txbuf_count,r24
  95:../../lib/uart_rb.c **** 
  96:../../lib/uart_rb.c ****     uart_txbuf_optr++;
  97:../../lib/uart_rb.c ****     if ( uart_txbuf_optr >= uart_txbuf + UART_TX_BUFSZ )
 187               		.stabn	68,0,97,.LM10-.LFBB2
 188               	.LM10:
GAS LISTING /tmp/cc9tL58I.s 			page 6


 189 0056 80E0      		ldi r24,hi8(uart_txbuf+1)
 190 0058 E030      		cpi r30,lo8(uart_txbuf+1)
 191 005a F807      		cpc r31,r24
 192 005c 00F4      		brsh .L7
  96:../../lib/uart_rb.c ****     uart_txbuf_optr++;
 193               		.stabn	68,0,96,.LM11-.LFBB2
 194               	.LM11:
 195 005e F093 0000 		sts uart_txbuf_optr+1,r31
 196 0062 E093 0000 		sts uart_txbuf_optr,r30
 197 0066 00C0      		rjmp .L8
 198               	.L7:
  98:../../lib/uart_rb.c ****         uart_txbuf_optr = uart_txbuf;
 199               		.stabn	68,0,98,.LM12-.LFBB2
 200               	.LM12:
 201 0068 80E0      		ldi r24,lo8(uart_txbuf)
 202 006a 90E0      		ldi r25,hi8(uart_txbuf)
 203 006c 9093 0000 		sts uart_txbuf_optr+1,r25
 204 0070 8093 0000 		sts uart_txbuf_optr,r24
 205               	.L8:
  99:../../lib/uart_rb.c **** 
 100:../../lib/uart_rb.c ****     UDR0 = data;
 206               		.stabn	68,0,100,.LM13-.LFBB2
 207               	.LM13:
 208 0074 2093 C600 		sts 198,r18
 101:../../lib/uart_rb.c **** 
 102:../../lib/uart_rb.c ****     // if we're out of things to send, disable the interrupt until more data is
 103:../../lib/uart_rb.c ****     // added to the buffer
 104:../../lib/uart_rb.c ****     if (!uart_txbuf_count) {
 209               		.stabn	68,0,104,.LM14-.LFBB2
 210               	.LM14:
 211 0078 8091 0000 		lds r24,uart_txbuf_count
 212 007c 8111      		cpse r24,__zero_reg__
 213 007e 00C0      		rjmp .L6
 214               	.LBB8:
 105:../../lib/uart_rb.c ****         UCSR0B &= ~(_BV(UDRIE0));
 215               		.stabn	68,0,105,.LM15-.LFBB2
 216               	.LM15:
 217 0080 8091 C100 		lds r24,193
 218 0084 8F7D      		andi r24,lo8(-33)
 219 0086 8093 C100 		sts 193,r24
 220               	.L6:
 221 008a 0895      		ret
 222               	.LBE8:
 223               		.size	uart_rb_txh, .-uart_rb_txh
 224               		.stabs	"data:r(5,2)",64,0,91,18
 225               		.stabn	192,0,0,.LFBB2-.LFBB2
 226               		.stabn	224,0,0,.Lscope2-.LFBB2
 227               	.Lscope2:
 228               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 229               		.stabd	78,0,0
 230               		.stabs	"uart_rb_init:F(0,47)",36,0,22,uart_rb_init
 231               	.global	uart_rb_init
 232               		.type	uart_rb_init, @function
 233               	uart_rb_init:
 234               		.stabd	46,0,0
  22:../../lib/uart_rb.c **** void uart_rb_init(void) {
 235               		.stabn	68,0,22,.LM16-.LFBB3
GAS LISTING /tmp/cc9tL58I.s 			page 7


 236               	.LM16:
 237               	.LFBB3:
 238               	/* prologue: function */
 239               	/* frame size = 0 */
 240               	/* stack size = 0 */
 241               	.L__stack_usage = 0
  23:../../lib/uart_rb.c ****     uart_init(&uart_rb_txh, &uart_rb_rxh);
 242               		.stabn	68,0,23,.LM17-.LFBB3
 243               	.LM17:
 244 008c 60E0      		ldi r22,lo8(gs(uart_rb_rxh))
 245 008e 70E0      		ldi r23,hi8(gs(uart_rb_rxh))
 246 0090 80E0      		ldi r24,lo8(gs(uart_rb_txh))
 247 0092 90E0      		ldi r25,hi8(gs(uart_rb_txh))
 248 0094 0E94 0000 		call uart_init
  24:../../lib/uart_rb.c ****     uart_enable();
 249               		.stabn	68,0,24,.LM18-.LFBB3
 250               	.LM18:
 251 0098 0E94 0000 		call uart_enable
  26:../../lib/uart_rb.c **** 	uart_rxbuf_iptr = uart_rxbuf;
 252               		.stabn	68,0,26,.LM19-.LFBB3
 253               	.LM19:
 254 009c 80E0      		ldi r24,lo8(uart_rxbuf)
 255 009e 90E0      		ldi r25,hi8(uart_rxbuf)
 256 00a0 9093 0000 		sts uart_rxbuf_iptr+1,r25
 257 00a4 8093 0000 		sts uart_rxbuf_iptr,r24
  27:../../lib/uart_rb.c **** 	uart_rxbuf_optr = uart_rxbuf;
 258               		.stabn	68,0,27,.LM20-.LFBB3
 259               	.LM20:
 260 00a8 9093 0000 		sts uart_rxbuf_optr+1,r25
 261 00ac 8093 0000 		sts uart_rxbuf_optr,r24
  28:../../lib/uart_rb.c ****     uart_rxbuf_count = 0;
 262               		.stabn	68,0,28,.LM21-.LFBB3
 263               	.LM21:
 264 00b0 1092 0000 		sts uart_rxbuf_count,__zero_reg__
  30:../../lib/uart_rb.c **** 	uart_txbuf_iptr = uart_txbuf;
 265               		.stabn	68,0,30,.LM22-.LFBB3
 266               	.LM22:
 267 00b4 80E0      		ldi r24,lo8(uart_txbuf)
 268 00b6 90E0      		ldi r25,hi8(uart_txbuf)
 269 00b8 9093 0000 		sts uart_txbuf_iptr+1,r25
 270 00bc 8093 0000 		sts uart_txbuf_iptr,r24
  31:../../lib/uart_rb.c **** 	uart_txbuf_optr = uart_txbuf;
 271               		.stabn	68,0,31,.LM23-.LFBB3
 272               	.LM23:
 273 00c0 9093 0000 		sts uart_txbuf_optr+1,r25
 274 00c4 8093 0000 		sts uart_txbuf_optr,r24
  32:../../lib/uart_rb.c ****     uart_txbuf_count = 0;
 275               		.stabn	68,0,32,.LM24-.LFBB3
 276               	.LM24:
 277 00c8 1092 0000 		sts uart_txbuf_count,__zero_reg__
 278 00cc 0895      		ret
 279               		.size	uart_rb_init, .-uart_rb_init
 280               	.Lscope3:
 281               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 282               		.stabd	78,0,0
 283               		.stabs	"uart_rb_data_rdy:F(5,2)",36,0,35,uart_rb_data_rdy
 284               	.global	uart_rb_data_rdy
GAS LISTING /tmp/cc9tL58I.s 			page 8


 285               		.type	uart_rb_data_rdy, @function
 286               	uart_rb_data_rdy:
 287               		.stabd	46,0,0
  35:../../lib/uart_rb.c **** uint8_t uart_rb_data_rdy(void) {
 288               		.stabn	68,0,35,.LM25-.LFBB4
 289               	.LM25:
 290               	.LFBB4:
 291               	/* prologue: function */
 292               	/* frame size = 0 */
 293               	/* stack size = 0 */
 294               	.L__stack_usage = 0
  36:../../lib/uart_rb.c **** 	return ( uart_rxbuf_count );
 295               		.stabn	68,0,36,.LM26-.LFBB4
 296               	.LM26:
 297 00ce 8091 0000 		lds r24,uart_rxbuf_count
  37:../../lib/uart_rb.c **** }
 298               		.stabn	68,0,37,.LM27-.LFBB4
 299               	.LM27:
 300 00d2 0895      		ret
 301               		.size	uart_rb_data_rdy, .-uart_rb_data_rdy
 302               	.Lscope4:
 303               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 304               		.stabd	78,0,0
 305               		.stabs	"uart_rb_rx:F(5,2)",36,0,39,uart_rb_rx
 306               	.global	uart_rb_rx
 307               		.type	uart_rb_rx, @function
 308               	uart_rb_rx:
 309               		.stabd	46,0,0
  39:../../lib/uart_rb.c **** uint8_t uart_rb_rx(void) {
 310               		.stabn	68,0,39,.LM28-.LFBB5
 311               	.LM28:
 312               	.LFBB5:
 313               	/* prologue: function */
 314               	/* frame size = 0 */
 315               	/* stack size = 0 */
 316               	.L__stack_usage = 0
 317               	.L14:
  43:../../lib/uart_rb.c **** 	while ( uart_rxbuf_count == 0 );
 318               		.stabn	68,0,43,.LM29-.LFBB5
 319               	.LM29:
 320 00d4 8091 0000 		lds r24,uart_rxbuf_count
 321 00d8 8823      		tst r24
 322 00da 01F0      		breq .L14
  45:../../lib/uart_rb.c ****     UCSR0B &= ~(_BV(RXCIE0) | _BV(RXEN0));
 323               		.stabn	68,0,45,.LM30-.LFBB5
 324               	.LM30:
 325 00dc 8091 C100 		lds r24,193
 326 00e0 8F76      		andi r24,lo8(111)
 327 00e2 8093 C100 		sts 193,r24
  47:../../lib/uart_rb.c **** 	tmp = *uart_rxbuf_optr;
 328               		.stabn	68,0,47,.LM31-.LFBB5
 329               	.LM31:
 330 00e6 E091 0000 		lds r30,uart_rxbuf_optr
 331 00ea F091 0000 		lds r31,uart_rxbuf_optr+1
 332 00ee 8191      		ld r24,Z+
  48:../../lib/uart_rb.c **** 	uart_rxbuf_count--;
 333               		.stabn	68,0,48,.LM32-.LFBB5
GAS LISTING /tmp/cc9tL58I.s 			page 9


 334               	.LM32:
 335 00f0 9091 0000 		lds r25,uart_rxbuf_count
 336 00f4 9150      		subi r25,lo8(-(-1))
 337 00f6 9093 0000 		sts uart_rxbuf_count,r25
  52:../../lib/uart_rb.c **** 	if ( uart_rxbuf_optr >= uart_rxbuf + UART_RX_BUFSZ )
 338               		.stabn	68,0,52,.LM33-.LFBB5
 339               	.LM33:
 340 00fa 90E0      		ldi r25,hi8(uart_rxbuf+64)
 341 00fc E030      		cpi r30,lo8(uart_rxbuf+64)
 342 00fe F907      		cpc r31,r25
 343 0100 00F4      		brsh .L15
  51:../../lib/uart_rb.c **** 	uart_rxbuf_optr++;
 344               		.stabn	68,0,51,.LM34-.LFBB5
 345               	.LM34:
 346 0102 F093 0000 		sts uart_rxbuf_optr+1,r31
 347 0106 E093 0000 		sts uart_rxbuf_optr,r30
 348 010a 00C0      		rjmp .L16
 349               	.L15:
  53:../../lib/uart_rb.c **** 		uart_rxbuf_optr = uart_rxbuf;
 350               		.stabn	68,0,53,.LM35-.LFBB5
 351               	.LM35:
 352 010c 20E0      		ldi r18,lo8(uart_rxbuf)
 353 010e 30E0      		ldi r19,hi8(uart_rxbuf)
 354 0110 3093 0000 		sts uart_rxbuf_optr+1,r19
 355 0114 2093 0000 		sts uart_rxbuf_optr,r18
 356               	.L16:
  55:../../lib/uart_rb.c ****     UCSR0B |= (_BV(RXCIE0) | _BV(RXEN0));
 357               		.stabn	68,0,55,.LM36-.LFBB5
 358               	.LM36:
 359 0118 9091 C100 		lds r25,193
 360 011c 9069      		ori r25,lo8(-112)
 361 011e 9093 C100 		sts 193,r25
  58:../../lib/uart_rb.c **** }
 362               		.stabn	68,0,58,.LM37-.LFBB5
 363               	.LM37:
 364 0122 0895      		ret
 365               		.size	uart_rb_rx, .-uart_rb_rx
 366               		.stabs	"tmp:r(0,11)",64,0,40,24
 367               		.stabn	192,0,0,.LFBB5-.LFBB5
 368               		.stabn	224,0,0,.Lscope5-.LFBB5
 369               	.Lscope5:
 370               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 371               		.stabd	78,0,0
 372               		.stabs	"uart_rb_tx:F(0,47)",36,0,60,uart_rb_tx
 373               		.stabs	"data:P(5,2)",64,0,60,24
 374               	.global	uart_rb_tx
 375               		.type	uart_rb_tx, @function
 376               	uart_rb_tx:
 377               		.stabd	46,0,0
  60:../../lib/uart_rb.c **** void uart_rb_tx(uint8_t data) {
 378               		.stabn	68,0,60,.LM38-.LFBB6
 379               	.LM38:
 380               	.LFBB6:
 381               	/* prologue: function */
 382               	/* frame size = 0 */
 383               	/* stack size = 0 */
 384               	.L__stack_usage = 0
GAS LISTING /tmp/cc9tL58I.s 			page 10


  61:../../lib/uart_rb.c ****     UCSR0B &= ~(_BV(UDRIE0));
 385               		.stabn	68,0,61,.LM39-.LFBB6
 386               	.LM39:
 387 0124 9091 C100 		lds r25,193
 388 0128 9F7D      		andi r25,lo8(-33)
 389 012a 9093 C100 		sts 193,r25
 390               	.L19:
  64:../../lib/uart_rb.c **** 	while ( uart_txbuf_count == UART_TX_BUFSZ );
 391               		.stabn	68,0,64,.LM40-.LFBB6
 392               	.LM40:
 393 012e 9091 0000 		lds r25,uart_txbuf_count
 394 0132 9130      		cpi r25,lo8(1)
 395 0134 01F0      		breq .L19
  66:../../lib/uart_rb.c **** 	*uart_txbuf_iptr = data;
 396               		.stabn	68,0,66,.LM41-.LFBB6
 397               	.LM41:
 398 0136 E091 0000 		lds r30,uart_txbuf_iptr
 399 013a F091 0000 		lds r31,uart_txbuf_iptr+1
 400 013e 8083      		st Z,r24
  67:../../lib/uart_rb.c **** 	uart_txbuf_count++;
 401               		.stabn	68,0,67,.LM42-.LFBB6
 402               	.LM42:
 403 0140 8091 0000 		lds r24,uart_txbuf_count
 404 0144 8F5F      		subi r24,lo8(-(1))
 405 0146 8093 0000 		sts uart_txbuf_count,r24
  70:../../lib/uart_rb.c **** 	uart_txbuf_iptr++;
 406               		.stabn	68,0,70,.LM43-.LFBB6
 407               	.LM43:
 408 014a 8091 0000 		lds r24,uart_txbuf_iptr
 409 014e 9091 0000 		lds r25,uart_txbuf_iptr+1
 410 0152 0196      		adiw r24,1
  71:../../lib/uart_rb.c **** 	if ( uart_txbuf_iptr >= uart_txbuf + UART_TX_BUFSZ )
 411               		.stabn	68,0,71,.LM44-.LFBB6
 412               	.LM44:
 413 0154 20E0      		ldi r18,hi8(uart_txbuf+1)
 414 0156 8030      		cpi r24,lo8(uart_txbuf+1)
 415 0158 9207      		cpc r25,r18
 416 015a 00F0      		brlo .L22
  72:../../lib/uart_rb.c **** 		uart_txbuf_iptr = uart_txbuf;
 417               		.stabn	68,0,72,.LM45-.LFBB6
 418               	.LM45:
 419 015c 80E0      		ldi r24,lo8(uart_txbuf)
 420 015e 90E0      		ldi r25,hi8(uart_txbuf)
 421               	.L22:
 422 0160 9093 0000 		sts uart_txbuf_iptr+1,r25
 423 0164 8093 0000 		sts uart_txbuf_iptr,r24
  75:../../lib/uart_rb.c ****     UCSR0B |= _BV(UDRIE0);
 424               		.stabn	68,0,75,.LM46-.LFBB6
 425               	.LM46:
 426 0168 8091 C100 		lds r24,193
 427 016c 8062      		ori r24,lo8(32)
 428 016e 8093 C100 		sts 193,r24
 429 0172 0895      		ret
 430               		.size	uart_rb_tx, .-uart_rb_tx
 431               	.Lscope6:
 432               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 433               		.stabd	78,0,0
GAS LISTING /tmp/cc9tL58I.s 			page 11


 434               	.global	uart_txbuf_count
 435               		.section .bss
 436               		.type	uart_txbuf_count, @object
 437               		.size	uart_txbuf_count, 1
 438               	uart_txbuf_count:
 439 0000 00        		.zero	1
 440               	.global	uart_txbuf_optr
 441               		.data
 442               		.type	uart_txbuf_optr, @object
 443               		.size	uart_txbuf_optr, 2
 444               	uart_txbuf_optr:
 445 0000 0000      		.word	uart_txbuf
 446               	.global	uart_txbuf_iptr
 447               		.type	uart_txbuf_iptr, @object
 448               		.size	uart_txbuf_iptr, 2
 449               	uart_txbuf_iptr:
 450 0002 0000      		.word	uart_txbuf
 451               	.global	uart_rxbuf_count
 452               		.section .bss
 453               		.type	uart_rxbuf_count, @object
 454               		.size	uart_rxbuf_count, 1
 455               	uart_rxbuf_count:
 456 0001 00        		.zero	1
 457               	.global	uart_rxbuf_optr
 458               		.data
 459               		.type	uart_rxbuf_optr, @object
 460               		.size	uart_rxbuf_optr, 2
 461               	uart_rxbuf_optr:
 462 0004 0000      		.word	uart_rxbuf
 463               	.global	uart_rxbuf_iptr
 464               		.type	uart_rxbuf_iptr, @object
 465               		.size	uart_rxbuf_iptr, 2
 466               	uart_rxbuf_iptr:
 467 0006 0000      		.word	uart_rxbuf
 468               		.comm	uart_txbuf,1,1
 469               		.comm	uart_rxbuf,64,1
 470               		.stabs	"uart_rxbuf:G(0,48)=ar(0,49)=r(0,49);0;0177777;;0;63;(0,50)=B(5,2)",32,0,10,0
 471               		.stabs	"uart_txbuf:G(0,51)=ar(0,49);0;0;(0,50)",32,0,11,0
 472               		.stabs	"uart_rxbuf_iptr:G(0,52)=*(0,50)",32,0,13,0
 473               		.stabs	"uart_rxbuf_optr:G(0,52)",32,0,14,0
 474               		.stabs	"uart_rxbuf_count:G(0,50)",32,0,15,0
 475               		.stabs	"uart_txbuf_iptr:G(0,52)",32,0,17,0
 476               		.stabs	"uart_txbuf_optr:G(0,52)",32,0,18,0
 477               		.stabs	"uart_txbuf_count:G(0,50)",32,0,19,0
 478               		.text
 479               		.stabs	"",100,0,0,.Letext0
 480               	.Letext0:
 481               		.ident	"GCC: (GNU) 4.8.2"
 482               	.global __do_copy_data
 483               	.global __do_clear_bss
GAS LISTING /tmp/cc9tL58I.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 uart_rb.c
     /tmp/cc9tL58I.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc9tL58I.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc9tL58I.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc9tL58I.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc9tL58I.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc9tL58I.s:113    .text:0000000000000000 uart_rb_rxh
     /tmp/cc9tL58I.s:455    .bss:0000000000000001 uart_rxbuf_count
     /tmp/cc9tL58I.s:466    .data:0000000000000006 uart_rxbuf_iptr
                            *COM*:0000000000000040 uart_rxbuf
     /tmp/cc9tL58I.s:168    .text:0000000000000042 uart_rb_txh
     /tmp/cc9tL58I.s:444    .data:0000000000000000 uart_txbuf_optr
     /tmp/cc9tL58I.s:438    .bss:0000000000000000 uart_txbuf_count
                            *COM*:0000000000000001 uart_txbuf
     /tmp/cc9tL58I.s:233    .text:000000000000008c uart_rb_init
     /tmp/cc9tL58I.s:461    .data:0000000000000004 uart_rxbuf_optr
     /tmp/cc9tL58I.s:449    .data:0000000000000002 uart_txbuf_iptr
     /tmp/cc9tL58I.s:286    .text:00000000000000ce uart_rb_data_rdy
     /tmp/cc9tL58I.s:308    .text:00000000000000d4 uart_rb_rx
     /tmp/cc9tL58I.s:376    .text:0000000000000124 uart_rb_tx

UNDEFINED SYMBOLS
uart_init
uart_enable
__do_copy_data
__do_clear_bss
